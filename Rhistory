data <- read.csv("covid_19_clean_complete.csv")
#drag data
df <- data[which(data$Country == Malaysia), ]
df 

#load libraries
library(shiny)
library(leaflet)
library(dplyr)
library(leaflet.extras)
#import data
data <- read.csv("my_bystate.csv")
#categorize earthquake 
data$total <- ifelse(data$total <= 100, "shallow", ifelse(data$total <= 400 | data$total >100, "intermediate", ifelse(data$total > 400, "deep", "other")))

#Ui code:
ui <- fluidPage(
  mainPanel( 
leafletOutput(outputId = "mymap"), 
absolutePanel(top = 60, left = 20, 
      checkboxInput("markers", "Total", FALSE)
    )
))

Server code:
server <- function(input, output, session) {
 pal <- colorFactor(
    palette = c('gold', 'orange', 'dark orange', 'orange red', 'red', 'dark red'),
    domain = data$total)
 pal2 <- colorFactor(
    palette = c('blue', 'yellow', 'red'),
    domain = data$total
  )
  
#create the map
  output$mymap <- renderLeaflet({
    leaflet(data) %>% 
      setView(lng = 101.9758, lat = 4.2105, zoom = 5)  %>% #setting the view over ~ center of Malaysia
      addTiles() %>% 
      addCircles(data = data, lat = ~ Latitude, lng = ~ Longitude, weight = 1, radius = ~sqrt(total_clean)*1000, popup = ~as.character(total), label = ~as.character(paste0("Total_Number: ", sep = " ", total_clean)), color = ~pal(total), fillOpacity = 0.5)
  })
  
    observe({
    proxy <- leafletProxy("mymap", data = data)
    proxy %>% clearMarkers()
    if (input$markers) {
      proxy %>% addCircleMarkers(stroke = FALSE, color = ~pal2(total), fillOpacity = 0.2,      label = ~as.character(paste0("Total_Num: ", sep = " ", data$total))) %>%
        addLegend("bottomright", pal = pal2, values = data$total,
                  title = "Total Number",
                  opacity = 1)}
    else {
      proxy %>% clearMarkers() %>% clearControls()
    }
  })
  }
  
  shinyApp(ui, server)
  
